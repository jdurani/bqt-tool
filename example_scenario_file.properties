# connection property to be used while creating connection
# in this case we define two properties JDBC_PROP_1 and JDBC_PROP_2
bqt.connection.property.JDBC_PROP_1=true
bqt.connection.property.JDBC_PROP_2=10
# time in milliseconds
bqt.scenario.time.for.one.query=1000
# ping query
bqt.scenario.ping.query=SELECT * FROM mytable
# property 'url' in example_properties_file.properties has one placeholder ${vdb.name}
# we define property of same name here so placeholder can be safely replaced
vdb.name=My_VDB
# query set directory (relative to 'queryset.artifacts.dir')
queryset.dirname=query_set
# expected results (relative to 'queryset.dirname')
expected.results.dirname=expected_results
# test queries (relative to 'queryset.dirname')
test.queries.dirname=test_queries
# query which will be used to validate connection
# (if connection is not closed and method Connection.isValid(int) returns true)
# default to SELECT 1
bqt.scenario.valid.connection.sql=SELECT * FROM mytable
# query which will be executed after scenario
bqt.scenario.after.query=DELETE FROM mytable
# whether to fail query set after first failed query of query set
bqt.scenario.fastfail=true
